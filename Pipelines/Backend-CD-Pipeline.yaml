# -------------------------
# Backend CD Pipeline
# -------------------------
# Trigger section commented out (handled via backend CI pipeline trigger)
#trigger:
#  branches:
#    include:
#      - main

resources:
  pipelines:
    - pipeline: backendCI
      source: backend-ci
      trigger:
        branches:
          include:
            - main

variables:
  myServiceConnection: "MyServiceConnection"
  resourceGroup: "rg-banking-app"
  aksCluster: "aks-banking-cluster"
  namespace: "default"
  deploymentFile: "kubernetes/prod/deployment.yaml"
  secretFile: "kubernetes/prod/secret.yaml"
  acrName: "acrbankingapp"
  imageName: "backend"
  imageTag: "$(resources.pipeline.backendCI.runId)"
  keyVaultName: "kvBankingApp"

stages:
  - stage: Deploy
    displayName: "Deploy Backend to AKS"
    jobs:
      - job: DeployToAKS
        displayName: "Deploy to AKS"
        pool:
          name: Default

        steps:
          - checkout: self

          # Fetch secrets from Azure Key Vault
          - task: AzureKeyVault@2
            displayName: "Fetch Secrets from Azure Key Vault"
            inputs:
              azureSubscription: "$(myServiceConnection)"
              KeyVaultName: "$(keyVaultName)"
              SecretsFilter: '*'
              RunAsPreJob: false

          # Apply variable substitution for secret.yaml
          - task: FileTransform@1
            displayName: "File Transform - Apply secret.yaml"
            inputs:
              folderPath: "kubernetes/prod"
              fileType: "yaml"
              targetFiles: "$(secretFile)"
              variableSubstitutions: true

          # Apply secret.yaml to AKS
          - task: Kubernetes@1
            displayName: "Apply secret.yaml to AKS"
            inputs:
              connectionType: "Azure Resource Manager"
              azureSubscription: "$(myServiceConnection)"
              azureResourceGroup: "$(resourceGroup)"
              kubernetesCluster: "$(aksCluster)"
              namespace: "$(namespace)"
              command: "apply"
              useConfigurationFile: true
              configuration: "$(secretFile)"

          # Replace placeholders in deployment YAML
          - powershell: |
              Write-Host "Injecting secrets into YAML and replacing deployment placeholders..."

              $deploymentFile = "$(deploymentFile)"
              $ACR_NAME     = "$(acrName)"
              $IMAGE_NAME   = "$(imageName)"
              $IMAGE_TAG    = "$(imageTag)"

              if (-not (Test-Path $deploymentFile)) {
                  Write-Error "Deployment file not found: $deploymentFile"
                  exit 1
              }

              (Get-Content $deploymentFile -Raw) `
                  -replace "<ACR_NAME>", $ACR_NAME `
                  -replace "<IMAGE_NAME>", $IMAGE_NAME `
                  -replace "<TAG>", $IMAGE_TAG |
                  Set-Content $deploymentFile -Force

              Write-Host "Replaced image details in $deploymentFile"
            displayName: "Replace Secret & Deployment Placeholders"

          # Deploy backend to AKS using PowerShell script
          - task: AzurePowerShell@5
            displayName: "Deploy Backend to AKS"
            inputs:
              azureSubscription: "$(myServiceConnection)"
              ScriptType: "FilePath"
              ScriptPath: "./Pipelines/Backend-CD.ps1"
              ScriptArguments: "$(resourceGroup) $(aksCluster) $(namespace) $(deploymentFile) $(secretFile) $(acrName) $(imageName) $(imageTag)"
              azurePowerShellVersion: "LatestVersion"

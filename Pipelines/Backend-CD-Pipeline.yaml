#trigger:
#  branches:
#    include:
#      - main

resources:
  pipelines:
    - pipeline: backendCI
      source: backend-ci
      trigger:
        branches:
          include:
            - main
pr: none

variables:
  myServiceConnection: "MyAzureServiceConnection"
  resourceGroup: "rg-banking-app"
  aksCluster: "bankcluster"
  namespace: "default"
  deploymentFile: "kubernetes/prod/deployment.yaml"
  secretFile: "kubernetes/prod/secret.yaml"
  acrName: "bankingacr"
  imageName: "backend-ci"
  imageTag: "$(resources.pipeline.backendCI.runId)"

  # Add your DB/email/JWT secrets as pipeline variables (mark as secret in Azure DevOps)
  DB_USER: $(DB_USER)
  DB_PASSWORD: $(DB_PASSWORD)
  DB_URL: $(DB_URL)
  MAIL_USERNAME: $(MAIL_USERNAME)
  MAIL_PASSWORD: $(MAIL_PASSWORD)
  JWT_SECRET_KEY: $(JWT_SECRET_KEY)

stages:
  - stage: Deploy
    displayName: "Deploy Backend to AKS"
    jobs:
      - job: DeployToAKS
        pool:
          name: Default
        steps:
          - checkout: self

          # Replace tokens in secret.yaml using pipeline variables
          - task: PowerShell@2
            displayName: "Replace tokens in secret.yaml"
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Replacing tokens in secret.yaml..."
                $secretContent = Get-Content "$(secretFile)" -Raw
                $secretContent = $secretContent -replace "<DB_USER>", "$(DB_USER)"
                $secretContent = $secretContent -replace "<DB_PASSWORD>", "$(DB_PASSWORD)"
                $secretContent = $secretContent -replace "<DB_URL>", "$(DB_URL)"
                $secretContent = $secretContent -replace "<MAIL_USERNAME>", "$(MAIL_USERNAME)"
                $secretContent = $secretContent -replace "<MAIL_PASSWORD>", "$(MAIL_PASSWORD)"
                $secretContent = $secretContent -replace "<JWT_SECRET_KEY>", "$(JWT_SECRET_KEY)"
                Set-Content -Path "$(secretFile)" -Value $secretContent

          # Print secrets for debug (masked in logs if marked secret)
          - task: PowerShell@2
            displayName: "Print secrets (DEBUG)"
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Printing secrets..."
                Write-Host "DB_USER = $(DB_USER)"
                Write-Host "DB_PASSWORD = $(DB_PASSWORD)"
                Write-Host "DB_URL = $(DB_URL)"
                Write-Host "MAIL_USERNAME = $(MAIL_USERNAME)"
                Write-Host "MAIL_PASSWORD = $(MAIL_PASSWORD)"
                Write-Host "JWT_SECRET_KEY = $(JWT_SECRET_KEY)"
                Write-Host "Finished printing secrets."

          # Get AKS credentials
          - task: AzureCLI@2
            displayName: "Get AKS credentials"
            inputs:
              azureSubscription: "$(myServiceConnection)"
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                az aks get-credentials --resource-group $(resourceGroup) --name $(aksCluster) --overwrite-existing

          # Apply secret.yaml to AKS
          - task: Kubernetes@1
            displayName: "Apply secret.yaml to AKS"
            inputs:
              azureSubscription: "$(myServiceConnection)"
              connectionType: "Azure Resource Manager"
              azureResourceGroup: "$(resourceGroup)"
              kubernetesCluster: "$(aksCluster)"
              command: "apply"
              useConfigurationFile: true
              configuration: "$(secretFile)"

          # Replace image placeholders in deployment YAML
          - task: PowerShell@2
            displayName: "Replace image placeholders in deployment YAML"
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Replacing image placeholders in deployment YAML..."
                $deploymentFile = "$(deploymentFile)"
                (Get-Content $deploymentFile -Raw) `
                  -replace "<ACR_NAME>", "$(acrName)" `
                  -replace "<IMAGE_NAME>", "$(imageName)" `
                  -replace "<TAG>", "$(imageTag)" |
                  Set-Content $deploymentFile -Force
                Write-Host "Updated deployment YAML: $deploymentFile"

          # Deploy backend to AKS via PS script
          - task: AzurePowerShell@5
            displayName: "Deploy Backend to AKS"
            inputs:
              azureSubscription: "$(myServiceConnection)"
              ScriptType: "FilePath"
              ScriptPath: "./Pipelines/Backend-CD.ps1"
              ScriptArguments: "$(resourceGroup) $(aksCluster) $(namespace) $(deploymentFile) $(secretFile) $(acrName) $(imageName) $(imageTag)"
              azurePowerShellVersion: "LatestVersion"
